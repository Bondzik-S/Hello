*{
    box-sizing: border-box;
}

.wrapper{
    width: 80%;
    margin: 0 auto;
}

.d-flex{
    display: flex;
}

.left-text,
.right-text{
    width: 100%;
    padding: 50px;
}

.left-text{
    background-color: yellow;
    /* font-size: 30px; */
}

.right-text{
    background-color: blue;
    /* font-size: 14px; */
}

/* max-width: - менше цього зн-ня
min-width: - більше цього значення */

/* media (медіа квері) допомагає адаптувати текст під різні пристрої.

    В круглих дужках позначаємо умову (правило, коли саме спрацює медів запит), а в фігурних - що відбудеться (css-правило)*/
/* @media(max-width:1600px){
    .responsive{
        flex-direction: column;
    }
}
@media(max-width:1400px){
    .responsive{
        flex-direction: column-reverse;
    }
    .left-text{
        font-size: 20px;
    }
} */

/* @media(min-width:400px){
    .responsive{
        flex-direction: column;
    }
}
@media(min-width:600px){
    .responsive{
        flex-direction: column-reverse;
    }
    .left-text{
        font-size: 20px;
    }
} */


/* ДВА ВАРІАНТИ ЗАПИСУ МЕДІА КВЕРІ В ПРОМІЖКАХ */
/* @media screen 
    and (min-width:400px)
    and (max-width:800px){
    .left-text{
        font-size: 20px;
        font-weight: bold;
    }
    .wrapper{
        width: 96%;
    }
} */

/* @media(400px <= width <= 1000px){
    .wrapper{
        width: 300px;
        flex-direction: column-reverse;
    }
    .left-text{
        font-size: 14px;
    }
} */

/* @media(max-width:800px){
    .pc-br{
        display: none; Повністю прибирає елемент з потоку html
    }
} */

/* @media(max-width:400px){
    .pc-br{
        display: block; Елемент буде активним
    }
} */

.show-menu{
    display: none;
    opacity: 0.5;
}

/* .show-menu.active{
    background-color: green;
} */

/* @media(max-width:600px){
    nav{
        display: none;
    }
    .show-menu{
        display:block;
        opacity: 1;
        background-color: rgba(104, 166, 190, 0.692);
    }
} */

/* Зміна сторінки за допомогою медіа квері для друку */
/* @media print{
    body{
        background-color: transparent;
    }
    img{
        display: none;
    }
} */

/* Редагування сторінки по співвідношенню сторін. 3 до 2 - співвідношення телефонів. */
/* @media(max-aspect-ratio: 3/2){
    body{
        background-color: pink;
    }
} */

/* .wrapper{
    width: 1200px;
    margin: 0 auto;
} */

/* @media(max-width: 1220px){
    .wrapper{
        width: 90%;
    }
} */

/* rem, em - одиниці, які використовуються для пропорційної зміни фонт-сайзу і беруть вони значення від базового фонт-сайзу сторінки 

em - використовують базовий розмір шрифту сторінки (той, що задали в боді та нтмл)

rem - працює так само, як і єм, тобто розміри вираховуються від фонт сайзу, але беруться за розміри батьківського елементу, а не нтмл і боді
*/

body,html{
    font-size: 20px;
}

/* .em{
    font-size: 2em; 20px * 2em = 40px ---> 20 пікселів вказані в боді, тому зн-ня взяте звідти
    padding: 2em;
} */

@media(max-width:1200px){
    body,html{
        font-size: 10px;
    }
}

.rem{
    font-size: 20px;
    width: 29rem;
    padding: 1rem;
}

button{
    display: inline-block;
    padding: 1em 2em;

}

/*
vw - вʼюпорт віз відпровідає одиниці ширини екрану

vh - вʼюпорт хеігхт відповідає одиниці висоти екрану

Це одиниці вимірювання чимось схожі до відсотків, де одиниця розміру буде певне значення залежно від вашого розміру екрану
*/
.background-full{
    width: 50vw; /* аля 50% */
    max-width: 600px;
    min-height: 100vh;
    padding: 20px;
}

.green{
    background-color: green;
    font-size: 1.8vw;
}

.gray{
    background-color: gray;
}

@media(max-wid:1200px){
    .green{
        font-size: 14px;
    }
}

footer{
    display: flex;
    flex-wrap: wrap;
}

.w-1{

}
.w-6{
    width: 50%;
}
.w-12{
    width: 100%;
}

@media(max-width:400px){
    .w-6{
        width: 100%;
    }
}